#############################################################################
# Makefile for building: Tower-Defense-master
# Generated by qmake (2.01a) (Qt 4.8.1) on: Wed Dec 4 18:44:12 2013
# Project:  Tower-Defense-master.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile Tower-Defense-master.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Basic.cpp \
		Board.cpp \
		Enemy.cpp \
		Fire.cpp \
		Heavy.cpp \
		main.cpp \
		MyPaint.cpp \
		Puny.cpp \
		Quick.cpp \
		Speedy.cpp \
		Boss.cpp \
		Super.cpp \
		Tower.cpp moc_MyPaint.cpp \
		qrc_towerdefense.cpp
OBJECTS       = Basic.o \
		Board.o \
		Enemy.o \
		Fire.o \
		Heavy.o \
		main.o \
		MyPaint.o \
		Puny.o \
		Quick.o \
		Speedy.o \
		Boss.o \
		Super.o \
		Tower.o \
		moc_MyPaint.o \
		qrc_towerdefense.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Tower-Defense-master.pro
QMAKE_TARGET  = Tower-Defense-master
DESTDIR       = 
TARGET        = Tower-Defense-master

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Tower-Defense-master.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile Tower-Defense-master.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Tower-Defense-master.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Tower-Defense-master1.0.0 || $(MKDIR) .tmp/Tower-Defense-master1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Tower-Defense-master1.0.0/ && $(COPY_FILE) --parents Basic.h Board.h Enemy.h Fire.h Heavy.h MyPaint.h Puny.h Quick.h Speedy.h Boss.h Tower.h .tmp/Tower-Defense-master1.0.0/ && $(COPY_FILE) --parents towerdefense.qrc .tmp/Tower-Defense-master1.0.0/ && $(COPY_FILE) --parents Basic.cpp Board.cpp Enemy.cpp Fire.cpp Heavy.cpp main.cpp MyPaint.cpp Puny.cpp Quick.cpp Speedy.cpp Boss.cpp Tower.cpp .tmp/Tower-Defense-master1.0.0/ && (cd `dirname .tmp/Tower-Defense-master1.0.0` && $(TAR) Tower-Defense-master1.0.0.tar Tower-Defense-master1.0.0 && $(COMPRESS) Tower-Defense-master1.0.0.tar) && $(MOVE) `dirname .tmp/Tower-Defense-master1.0.0`/Tower-Defense-master1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Tower-Defense-master1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_MyPaint.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_MyPaint.cpp
moc_MyPaint.cpp: Board.h \
		Tower.h \
		Enemy.h \
		MyPaint.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) MyPaint.h -o moc_MyPaint.cpp

compiler_rcc_make_all: qrc_towerdefense.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_towerdefense.cpp
qrc_towerdefense.cpp: towerdefense.qrc \
		QuickButton.png \
		WaveButton.png \
		SellButton.png \
		map1.txt \
		grass_beta.png \
		map2.txt \
		RangeButton.png \
		FiringRateButton.png \
		path.png \
		FireButton.png \
		hole.png \
		PowerButton.png \
		SuperButton.png \
		basic_button_beta.png
	/usr/bin/rcc -name towerdefense towerdefense.qrc -o qrc_towerdefense.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

Basic.o: Basic.cpp Basic.h \
		Tower.h \
		Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Basic.o Basic.cpp

Board.o: Board.cpp Board.h \
		Tower.h \
		Enemy.h \
		Puny.h \
		Heavy.h \
		Speedy.h \
		Quick.h \
		Super.h \
		Boss.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Board.o Board.cpp

Enemy.o: Enemy.cpp Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Enemy.o Enemy.cpp

Fire.o: Fire.cpp Fire.h \
		Tower.h \
		Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Fire.o Fire.cpp

Heavy.o: Heavy.cpp Enemy.h \
		Heavy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Heavy.o Heavy.cpp

main.o: main.cpp MyPaint.h \
		Board.h \
		Tower.h \
		Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

MyPaint.o: MyPaint.cpp Board.h \
		Tower.h \
		Enemy.h \
		MyPaint.h \
		Quick.h \
		Basic.h \
		Super.h \
		Fire.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MyPaint.o MyPaint.cpp

Puny.o: Puny.cpp Enemy.h \
		Puny.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Puny.o Puny.cpp

Quick.o: Quick.cpp Quick.h \
		Tower.h \
		Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Quick.o Quick.cpp

Super.o: Super.cpp Super.h \
		Tower.h \
		Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Super.o Super.cpp

Speedy.o: Speedy.cpp Enemy.h \
		Speedy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Speedy.o Speedy.cpp

Boss.o: Boss.cpp Enemy.h \
		Boss.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Boss.o Boss.cpp

Tower.o: Tower.cpp Board.h \
		Tower.h \
		Enemy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Tower.o Tower.cpp

moc_MyPaint.o: moc_MyPaint.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MyPaint.o moc_MyPaint.cpp

qrc_towerdefense.o: qrc_towerdefense.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_towerdefense.o qrc_towerdefense.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

